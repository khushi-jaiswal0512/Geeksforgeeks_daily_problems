class Solution {
    // Function to return a list of integers denoting spiral traversal of matrix.
    public ArrayList<Integer> spirallyTraverse(int matrix[][]) {
        // code here
        int r = matrix.length;
        int c = matrix[0].length;
         ArrayList<Integer> ans = new ArrayList<>();
          if(c==1){
               for(int i=0; i<r; i++){
                   ans.add(matrix[i][0]);
               }
                return ans;
          }
           
          if(r==1){
              for(int i=0; i<c; i++){
                   ans.add(matrix[0][i]);
              }
               return ans;
          }
          
           int top=0,right=c-1,left=0,bottom=r-1;
           while((top<=bottom) && (left<=right)){
                 
                 for(int i=left; i<=right; i++){
                     ans.add(matrix[top][i]);
                 }
                  top++;
                  
                  for(int i=top; i<=bottom; i++){
                      ans.add(matrix[i][right]);
                  }
                   right--;
                   
                   if(top<=bottom){
                       for(int i=right; i>=left; i--){
                            ans.add(matrix[bottom][i]);
                       }
                        bottom--;
                   }
                     if(left<=right){
                         for(int i=bottom; i>=top; i--){
                              ans.add(matrix[i][left]);
                         }
                          left++;
                     }
                     
           }
             return ans;
    }
}
